version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: yourpassword
      MYSQL_DATABASE: yourdatabase
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:v1.13.0
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    command: [ "--logtostderr" ]
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  group-manage-service:
    build:
      context: ./group-manage-service
      dockerfile: Dockerfile
    container_name: group-manage-service
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/yourdatabase
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: yourpassword
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

  gateway-layer:
    build:
      context: ./gateway-layer
      dockerfile: Dockerfile
    container_name: gateway-layer
    depends_on:
      rabbitmq:
        condition: service_healthy
      group-manage-service:
        condition: service_started
    networks:
      - app-network
    environment:
      RABBIT_URL: amqp://guest:guest@rabbitmq:5672
      SPRING_BOOT_URL: http://group-manage-service:8080
    ports:
      - "3000:3000"

  nginx:
    image: nginx:stable
    container_name: nginx_https
    depends_on:
      - gateway-layer
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    ports: [ "80:80","443:443" ]
    networks: [ app-network ]

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
